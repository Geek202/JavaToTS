plugins {
    id 'java'
    id 'maven-publish'
    id 'eclipse'
}

group 'me.geek.tom'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation 'com.github.javaparser:javaparser-core:3.16.1'
}

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

// https://github.com/MinecraftForge/ForgeGradle/blob/26fbfb8b160e650f1eeb86a19764ea73ff4de937/build.gradle#L96
//Gradle doesn't add it's own source when doing the API. So lets hack it in!
import org.gradle.plugins.ide.eclipse.model.*
import org.gradle.plugins.ide.eclipse.model.internal.*
project.extensions.eclipse.classpath.file.whenMerged { Classpath cp ->
    def gradleSrc = gradle.gradleHomeDir.absolutePath.replace(File.separator, '/') + '/src/'
    cp.entries.each { entry ->
        if ((entry in AbstractLibrary) && entry.library.file.name.startsWith('gradle-')) {
            def type = (entry.library.file.name =~ "^gradle(-(.*))?-(${gradle.gradleVersion})")[0][2]
            if (type == 'api') type = 'core-api' //Gradle name is different for cores
            if (type == '') type = 'core'
            entry.sourcePath = new FileReferenceFactory().fromPath(gradleSrc + type)
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'me.geek.tom'
            artifactId = 'JavaToTS'
            version = "${project.version}"

            from components.java
        }
    }

    repositories {
        maven {
            name = "TomTheGeek-Repo"
            url = "http://maven-upload.tomthegeek.ml/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}
